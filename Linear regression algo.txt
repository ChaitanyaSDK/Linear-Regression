Linear Regression

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(diabetes_X, diabetes.target, test_size=0.33, random_state=42)

# Create a  linear regression object
regr = linear_model.LinearRegression()

# Training the model using the training sets
regr.fit(X_train, y_train)

# Make predictions using the testing set
diabetes_y_pred = regr.predict(X_test)

#score
from sklearn.metrics import accuracy_score,classification_report
score=regr.score(X_test,y_test)
print(score)

# The coefficients
print('Coefficients: \n', regr.coef_)
# Calculating the mean squared error
print("Mean squared error: %.2f"
      % mean_squared_error(y_test, diabetes_y_pred))
# Explained variance score: 1 is perfect prediction
print('Variance score: %.2f' % r2_score(y_test, diabetes_y_pred))

# Plotting the test data
plt.scatter(X_test, y_test,  color='black')

# Plotting the predicted line
plt.plot(X_test, diabetes_y_pred, color='blue', linewidth=3)
plt.show()



